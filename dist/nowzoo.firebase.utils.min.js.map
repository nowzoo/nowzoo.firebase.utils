{"version":3,"sources":["nowzoo.firebase.utils.min.js"],"names":["angular","module","factory","$window","$firebaseAuth","$firebaseObject","$firebaseArray","_appReference","_appAuth","setApplicationReference","url","Firebase","getApplicationReference","getApplicationAuth","onError","err","this","__securityError","log_firebase","console","log","$ref","toString","ObjectFactory","$extend","$$error","ArrayFactory","childReference","paths","child","isArray","Error","forEach","path","s","getObject","ref","getRefObject","getArray","getRefArray"],"mappings":"AAAAA,QAAQC,OAAO,yBAA0B,aAEzCD,QAAQC,OAAO,yBACVC,QAAQ,qBAAsB,UAAW,gBAAiB,kBAAmB,iBAAkB,SAASC,EAASC,EAAeC,EAAiBC,GAC9I,GAAIC,GAAgB,KAChBC,EAAW,KAEXC,EAA0B,SAASC,GAEnC,MADAH,GAAgB,GAAIJ,GAAQQ,SAASD,IAIrCE,EAA0B,WAC1B,MAAOL,IAGPM,EAAqB,WAIrB,MAHML,KACFA,EAAWJ,EAAcQ,MAEtBJ,GAGPM,EAAU,SAASC,GACnBC,KAAKC,iBAAkB,EACnBd,EAAQe,cACRC,QAAQC,IAAIL,EAAKC,KAAKK,OAAOC,aAKjCC,EAAgBlB,EAAgBmB,SAASC,QAASX,IAElDY,EAAepB,EAAekB,SAASC,QAASX,IAOhDa,EAAiB,SAASC,GAC1B,GAAIC,GAAQjB,GACZ,KAAMZ,QAAQ8B,QAAQF,GAClB,KAAK,IAAKG,OAAM,0BAOpB,OAJA/B,SAAQgC,QAAQJ,EAAO,SAASK,GAC5B,GAAIC,GAAID,EAAKX,UACbO,GAAQA,EAAMA,MAAMK,KAEjBL,GAQPM,EAAY,SAASP,GACrB,GAAIQ,GAAMT,EAAeC,EAEzB,OAAO,IAAIL,GAAca,IAOzBC,EAAe,SAASD,GACxB,MAAO,IAAIb,GAAca,IAQzBE,EAAW,SAASV,GACpB,GAAIQ,GAAMT,EAAeC,EAEzB,OAAO,IAAIF,GAAaU,IAOxBG,EAAc,SAASH,GACvB,MAAO,IAAIV,GAAaU,GAI5B,QACIxB,wBAAyBA,EACzBH,wBAAyBA,EACzBI,mBAAoBA,EACpBc,eAAgBA,EAChBQ,UAAWA,EACXG,SAAUA,EACVC,YAAaA,EACbF,aAAcA","file":"nowzoo.firebase.utils.min.js","sourcesContent":["angular.module('nowzoo.firebase.utils', ['firebase']);\n\nangular.module('nowzoo.firebase.utils')\n    .factory('firebaseUtilities', [\"$window\", \"$firebaseAuth\", \"$firebaseObject\", \"$firebaseArray\", function($window, $firebaseAuth, $firebaseObject, $firebaseArray){\n        var _appReference = null;\n        var _appAuth = null;\n\n        var setApplicationReference = function(url){\n            _appReference = new $window.Firebase(url);\n            return _appReference;\n        };\n\n        var getApplicationReference = function(){\n            return _appReference;\n        };\n\n        var getApplicationAuth = function(){\n            if (! _appAuth){\n                _appAuth = $firebaseAuth(getApplicationReference());\n            }\n            return _appAuth;\n        };\n\n        var onError = function(err){\n            this.__securityError = true;\n            if ($window.log_firebase){\n                console.log(err, this.$ref().toString());\n            }\n        };\n\n\n        var ObjectFactory = $firebaseObject.$extend({$$error: onError});\n\n        var ArrayFactory = $firebaseArray.$extend({$$error: onError});\n\n        /**\n         * Returns the a child firebase reference based on an array of paths\n         * @param paths\n         * @returns {{}}\n         */\n        var childReference = function(paths){\n            var child = getApplicationReference();\n            if (! angular.isArray(paths)){\n                throw(new Error('use an array, you moron'));\n            }\n\n            angular.forEach(paths, function(path){\n                var s = path.toString();\n                child = child.child(s);\n            });\n            return child;\n        };\n\n        /**\n         * Returns a $firebaseObject based on an array of paths\n         * @param paths\n         * @returns {Function}\n         */\n        var getObject = function(paths){\n            var ref = childReference(paths);\n            /*jshint newcap: false */\n            return new ObjectFactory(ref);\n        };\n        /**\n         * Returns a $firebaseObject based on a firebase ref\n         * @param ref\n         * @returns {Function}\n         */\n        var getRefObject = function(ref){\n            return new ObjectFactory(ref);\n        };\n\n        /**\n         * Returns a $firebaseArray based on an array of paths\n         * @param paths\n         * @returns {Function}\n         */\n        var getArray = function(paths){\n            var ref = childReference(paths);\n            /*jshint newcap: false */\n            return new ArrayFactory(ref);\n        };\n        /**\n         * Returns a $firebaseArray based on a firebase ref\n         * @param ref\n         * @returns {Function}\n         */\n        var getRefArray = function(ref){\n            return new ArrayFactory(ref);\n        };\n\n\n        return {\n            getApplicationReference: getApplicationReference,\n            setApplicationReference: setApplicationReference,\n            getApplicationAuth: getApplicationAuth,\n            childReference: childReference,\n            getObject: getObject,\n            getArray: getArray,\n            getRefArray: getRefArray,\n            getRefObject: getRefObject\n        };\n\n    }]);\n"],"sourceRoot":"/source/"}